{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/correctionP7/client/src/pages/Registration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  _s();\n\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n    role: \"visitor\"\n  };\n  const [infos, setInfos] = useState(\"\");\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().min(3).max(15).required(),\n    password: Yup.string().min(4).max(20).required()\n  });\n\n  const onSubmit = data => {\n    //\"https://git.heroku.com/groupomania-git504.git/auth\"\n    axios.post(\"http://localhost:3001/auth\", data).then(res => {\n      console.log(res);\n      setInfos(res.data.msg); // (\"It's done \" + res.data.msg + \"👌\");\n    }).catch(err => {\n      //console.log(err.response.data.msg);\n      setInfos(err.response.data.msg);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\" // id=\"inputCreatePost\"\n          ,\n          name: \"username\",\n          placeholder: \"\\uD83D\\uDC64Mouche Farouche\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          type: \"password\" // id=\"inputCreatePost\"\n          ,\n          name: \"password\",\n          placeholder: \"\\uD83D\\uDD10\\uFE0F 3615 code qui n'en veut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: infos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Registration, \"zrN4cwt38SKGWFycAFhRtNHdDuM=\");\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/user/Downloads/correctionP7/client/src/pages/Registration.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Yup","axios","Registration","initialValues","username","password","role","infos","setInfos","validationSchema","object","shape","string","min","max","required","onSubmit","data","post","then","res","console","log","msg","catch","err","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAMC,aAAa,GAAG;AACpBC,IAAAA,QAAQ,EAAE,EADU;AAEpBC,IAAAA,QAAQ,EAAE,EAFU;AAGpBC,IAAAA,IAAI,EAAE;AAHc,GAAtB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMc,gBAAgB,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AAC1CP,IAAAA,QAAQ,EAAEJ,GAAG,CAACY,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,EADgC;AAE1CV,IAAAA,QAAQ,EAAEL,GAAG,CAACY,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B;AAFgC,GAAnB,CAAzB;;AAKA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACzB;AACAhB,IAAAA,KAAK,CACFiB,IADH,CACQ,4BADR,EACsCD,IADtC,EAEGE,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAZ,MAAAA,QAAQ,CAACY,GAAG,CAACH,IAAJ,CAASM,GAAV,CAAR,CAFa,CAGb;AACD,KANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;AACd;AACAjB,MAAAA,QAAQ,CAACiB,GAAG,CAACC,QAAJ,CAAaT,IAAb,CAAkBM,GAAnB,CAAR;AACD,KAVH;AAWD,GAbD;;AAeA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAEpB,aADjB;AAEE,MAAA,QAAQ,EAAEa,QAFZ;AAGE,MAAA,gBAAgB,EAAEP,gBAHpB;AAAA,6BAKE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AACE,UAAA,YAAY,EAAC,KADf,CAEE;AAFF;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAHF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,KAAD;AACE,UAAA,YAAY,EAAC,KADf;AAEE,UAAA,IAAI,EAAC,UAFP,CAGE;AAHF;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,gBAZF,eAoBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA,kBADF;AAiCD;;GA9DQL,Y;;KAAAA,Y;AAgET,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nfunction Registration() {\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n    role: \"visitor\",\n  };\n\n  const [infos, setInfos] = useState(\"\");\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().min(3).max(15).required(),\n    password: Yup.string().min(4).max(20).required(),\n  });\n\n  const onSubmit = (data) => {\n    //\"https://git.heroku.com/groupomania-git504.git/auth\"\n    axios\n      .post(\"http://localhost:3001/auth\", data)\n      .then((res) => {\n        console.log(res);\n        setInfos(res.data.msg);\n        // (\"It's done \" + res.data.msg + \"👌\");\n      })\n      .catch((err) => {\n        //console.log(err.response.data.msg);\n        setInfos(err.response.data.msg);\n      });\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        <Form className=\"formContainer\">\n          <label>Username</label>\n          <ErrorMessage name=\"username\" component=\"span\" />\n          <Field\n            autoComplete=\"off\"\n            // id=\"inputCreatePost\"\n            name=\"username\"\n            placeholder=\"👤Mouche Farouche\"\n          />\n\n          <label>Password</label>\n          <ErrorMessage name=\"password\" component=\"span\" />\n          <Field\n            autoComplete=\"off\"\n            type=\"password\"\n            // id=\"inputCreatePost\"\n            name=\"password\"\n            placeholder=\"🔐️ 3615 code qui n'en veut\"\n          />\n\n          <button type=\"submit\">SignIn</button>\n        </Form>\n      </Formik>\n      <div>{infos}</div>\n    </>\n  );\n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}