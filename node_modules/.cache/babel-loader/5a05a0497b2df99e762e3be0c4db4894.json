{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/correctionP7/client/src/pages/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //useContext,\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"; //import { AuthContext } from \"../helpers/AuthContext\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost() {\n  _s();\n\n  //const { authState } = useContext(AuthContext);\n  const [image, setImage] = useState(\"\");\n  let history = useHistory();\n  const initialValues = {\n    title: \"\",\n    postText: \"\"\n  };\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      history.push(\"/login\");\n    }\n  }, [history]);\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().min(1).max(33).required(\"a title is needed 😉\"),\n    postText: Yup.string().min(1).max(150).required(\"a post is needed 🔤\")\n  });\n\n  const onSubmit = data => {\n    const formData = new FormData();\n    console.log(image);\n    formData.append(\"image\", image);\n    formData.append(\"title\", data.title);\n    formData.append(\"postText\", data.postText);\n\n    for (var pair of formData.entries()) {\n      console.log(pair[0] + ', ' + pair[1]);\n    }\n\n    axios //\"https://git.heroku.com/groupomania-git504.git/posts\"\n    .post(\"http://localhost:3001/posts\", formData, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      history.push(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      method: \"POST\",\n      encType: \"multipart/form-data\",\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        method: \"POST\",\n        action: \"/postimg\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          autoComplete: \"off\",\n          className: \"inputCreatePost \",\n          name: \"title\",\n          placeholder: \"Insert your title ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"postText\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"textarea\",\n          autoComplete: \"off\",\n          className: \"inputCreatePost textAreaPost\",\n          placeholder: \"\\uD83D\\uDCDD Type a message ...\",\n          name: \"postText\",\n          id: \"\",\n          cols: \"30\",\n          rows: \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file\",\n            className: \"btn\",\n            type: \"file\",\n            name: \"image\",\n            size: \"lg\",\n            onChange: e => setImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            children: \"SEND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePost, \"aK9Vrb1hEZWUgjJlhhj1TmromMQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/home/user/Downloads/correctionP7/client/src/pages/CreatePost.js"],"names":["React","useEffect","useState","Formik","Form","Field","ErrorMessage","Yup","axios","useHistory","CreatePost","image","setImage","history","initialValues","title","postText","localStorage","getItem","push","validationSchema","object","shape","string","min","max","required","onSubmit","data","formData","FormData","console","log","append","pair","entries","post","headers","accessToken","then","response","e","target","files"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n//useContext,\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n//import { AuthContext } from \"../helpers/AuthContext\";\n\nfunction CreatePost() {\n  //const { authState } = useContext(AuthContext);\n  const [image, setImage] = useState(\"\");\n\n  let history = useHistory();\n  const initialValues = {\n    title: \"\",\n    postText: \"\",\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"accessToken\")) {\n      history.push(\"/login\");\n    }\n  }, [history]);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().min(1).max(33).required(\"a title is needed 😉\"),\n    postText: Yup.string().min(1).max(150).required(\"a post is needed 🔤\"),\n  });\n\n  const onSubmit = (data) => {\n    const formData = new FormData();\n    console.log(image)\n    formData.append(\"image\", image);\n    formData.append(\"title\", data.title);\n    formData.append(\"postText\", data.postText);\n\n    for(var pair of formData.entries()) {\n   console.log(pair[0]+ ', '+ pair[1]);\n    }\n    axios\n      //\"https://git.heroku.com/groupomania-git504.git/posts\"\n      .post(\"http://localhost:3001/posts\", formData, {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then((response) => {\n        history.push(\"/\");\n      });\n  };\n\n  return (\n    <div className=\"createPostPage\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        method=\"POST\"\n        encType=\"multipart/form-data\"\n        validationSchema={validationSchema}\n      >\n        <Form\n          className=\"formContainer\"\n          method=\"POST\"\n          action=\"/postimg\"\n          encType=\"multipart/form-data\"\n        >\n          <label>title</label>\n          <ErrorMessage name=\"title\" component=\"span\" />\n          <Field\n            type=\"text\"\n            autoComplete=\"off\"\n            className=\"inputCreatePost \"\n            name=\"title\"\n            placeholder=\"Insert your title ...\"\n          />\n          <label>post</label>\n          <ErrorMessage name=\"postText\" component=\"span\" />\n          <Field\n            as=\"textarea\"\n            autoComplete=\"off\"\n            className=\"inputCreatePost textAreaPost\"\n            placeholder=\"📝 Type a message ...\"\n            name=\"postText\"\n            id=\"\"\n            cols=\"30\"\n            rows=\"15\"\n          ></Field>\n          <div>\n            <label htmlFor=\"file\">📷</label>\n            <input\n              id=\"file\"\n              className=\"btn\"\n              type=\"file\"\n              name=\"image\"\n              size=\"lg\"\n              onChange={(e) => setImage(e.target.files[0])}\n            />\n            <button className=\"btn\" type=\"submit\">\n              SEND\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}