{"ast":null,"code":"var _jsxFileName = \"/home/user/Downloads/correctionP7/client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../helpers/AuthContext\"; // import { Formik, Form, Field, ErrorMessage } from \"formik\";\n// import * as Yup from \"yup\";\n// const validationSchema = Yup.object().shape({\n//   username: Yup.string().min(1).max(15).required(\"🙅 please try again\"),\n//   password: Yup.string().min(1).max(150).required(\"🚫 password is invalid\"),\n// });\n// const initialValues = {\n//   username: \"username\",\n//   password: \"password\",\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [role, setRole] = useState(\"visitor\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthState\n  } = useContext(AuthContext);\n  let history = useHistory();\n\n  const login = () => {\n    const data = {\n      username: username,\n      password: password,\n      role: role\n    }; //\"https://git.heroku.com/groupomania-git504.git//auth/login\"\n\n    axios.post(\"http://localhost:3001/auth/login\", data).then(response => {\n      //console.log(response.data.error);\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        localStorage.setItem(\"accessToken\", response.data.token); //console.log(response.data);\n\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          role: response.data.role,\n          status: true\n        });\n        setRole(response.data.role); //console.log(role);\n\n        history.push(\"/\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"\\uD83D\\uDC64user\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"\\uD83D\\uDD10\\uFE0F*******\",\n        onChange: event => {\n          setPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginButton\",\n          type: \"submit\",\n          onClick: login,\n          children: [\" \", \"Login\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"5ekaKbZNAc7q7R7nsgTI7OfmX68=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/user/Downloads/correctionP7/client/src/pages/Login.js"],"names":["React","useState","useContext","axios","useHistory","AuthContext","Login","role","setRole","username","setUsername","password","setPassword","setAuthState","history","login","data","post","then","response","error","alert","localStorage","setItem","token","id","status","push","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../helpers/AuthContext\";\n// import { Formik, Form, Field, ErrorMessage } from \"formik\";\n// import * as Yup from \"yup\";\n\n// const validationSchema = Yup.object().shape({\n//   username: Yup.string().min(1).max(15).required(\"🙅 please try again\"),\n//   password: Yup.string().min(1).max(150).required(\"🚫 password is invalid\"),\n// });\n\n// const initialValues = {\n//   username: \"username\",\n//   password: \"password\",\n// };\n\nfunction Login() {\n  const [role, setRole] = useState(\"visitor\");\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthState } = useContext(AuthContext);\n\n  let history = useHistory();\n\n  const login = () => {\n    const data = { username: username, password: password, role: role };\n    //\"https://git.heroku.com/groupomania-git504.git//auth/login\"\n    axios.post(\"http://localhost:3001/auth/login\", data).then((response) => {\n      //console.log(response.data.error);\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        localStorage.setItem(\"accessToken\", response.data.token);\n        //console.log(response.data);\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          role: response.data.role,\n          status: true,\n        });\n        setRole(response.data.role);\n        //console.log(role);\n        history.push(\"/\");\n      }\n    });\n  };\n\n  return (\n    <div\n    // initialValues={initialValues}\n    // onClick={login}\n    // validationSchema={validationSchema}\n    >\n      <div className=\"loginContainer\">\n        <label>Username</label>\n        {/* <ErrorMessage name=\"username\" component=\"span\" /> */}\n        <input\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"👤user\"\n          onChange={(event) => {\n            setUsername(event.target.value);\n          }}\n        />\n        <label>Password</label>\n        {/* <ErrorMessage name=\"password\" component=\"span\" /> */}\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"🔐️*******\"\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n        />\n        <div>\n          <button className=\"loginButton\" type=\"submit\" onClick={login}>\n            {\" \"}\n            Login{\" \"}\n          </button>\n          {/* <button className=\"loginButton\" type=\"submit\" onClick={loginadmin}>\n            {\" \"}\n            admin{\" \"}\n          </button> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}